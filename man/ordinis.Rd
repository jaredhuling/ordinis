% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ordinis_call.R
\name{ordinis}
\alias{ordinis}
\title{Fitting Lasso-penalized Using the Coordinate Descent Algorithm}
\usage{
ordinis(x, y, weights = rep(1, NROW(y)), family = c("gaussian", "binomial"),
  penalty = c("lasso", "mcp", "scad"), lambda = numeric(0), alpha = 1,
  gamma = 3.7, penalty.factor = NULL, upper.limits = rep(Inf, NCOL(x)),
  lower.limits = rep(-Inf, NCOL(x)), nlambda = 100L,
  lambda.min.ratio = NULL, intercept = TRUE, standardize = TRUE,
  maxit = ifelse(family == "gaussian", 5000L, 500L), tol = ifelse(family ==
  "gaussian", 1e-04, 0.001), maxit.irls = 100L, tol.irls = 1e-04)
}
\arguments{
\item{x}{The design matrix}

\item{y}{The response vector}

\item{weights}{a vector of weights of length equal to length of \code{y}}

\item{family}{family of underlying model. Only "gaussian" for continuous responses is available now}

\item{penalty}{a string indicating which penalty to use. \code{"lasso"}, \code{"MCP"}, and \code{"SCAD"}
are available}

\item{lambda}{A user provided sequence of \eqn{\lambda}. If set to
\code{NULL}, the program will calculate its own sequence
according to \code{nlambda} and \code{lambda_min_ratio},
which starts from \eqn{\lambda_0} (with this
\eqn{\lambda} all coefficients will be zero) and ends at
\code{lambda0 * lambda_min_ratio}, containing
\code{nlambda} values equally spaced in the log scale.
It is recommended to set this parameter to be \code{NULL}
(the default).}

\item{alpha}{mixing parameter between 0 and 1 for elastic net. \code{alpha=1} is for the lasso, \code{alpha=0} is for ridge}

\item{gamma}{parameter for MCP/SCAD}

\item{penalty.factor}{a vector with length equal to the number of columns in x to be multiplied by lambda. by default
it is a vector of 1s}

\item{upper.limits}{a vector of length \code{ncol(x)} of upper limits for each coefficient. Can be a single value, which will
then be applied for each coefficient. Must be non-negative.}

\item{lower.limits}{a vector of length \code{ncol(x)} of lower limits for each coefficient. Can be a single value, which will
then be applied for each coefficient. Cannot be greater than 0.}

\item{nlambda}{Number of values in the \eqn{\lambda} sequence. Only used
when the program calculates its own \eqn{\lambda}
(by setting \code{lambda = NULL}).}

\item{lambda.min.ratio}{Smallest value in the \eqn{\lambda} sequence
as a fraction of \eqn{\lambda_0}. See
the explanation of the \code{lambda}
argument. This parameter is only used when
the program calculates its own \eqn{\lambda}
(by setting \code{lambda = NULL}). The default
value is the same as \pkg{glmnet}: 0.0001 if
\code{nrow(x) >= ncol(x)} and 0.01 otherwise.}

\item{intercept}{Whether to fit an intercept in the model. Default is \code{TRUE}.}

\item{standardize}{Whether to standardize the design matrix before
fitting the model. Default is \code{TRUE}. Fitted coefficients
are always returned on the original scale.}

\item{maxit}{Maximum number of coordinate descent iterations.}

\item{tol}{convergence tolerance parameter.}

\item{maxit.irls}{Maximum number of coordinate descent iterations.}

\item{tol.irls}{convergence tolerance parameter.}
}
\description{
ordinis provides estimation of linear models with the lasso penalty
}
\examples{
set.seed(123)
n = 100
p = 1000
b = c(runif(10, min = 0.1, max = 1), rep(0, p - 10))
x = matrix(rnorm(n * p, sd = 3), n, p)
y = drop(x \%*\% b) + rnorm(n)


## fit lasso model with 100 tuning parameter values
res <- ordinis(x, y)

y2 <- 1 * (y > 0)

resb <- ordinis(x, y2, family = "binomial")

}
